<?xml version="1.0" ?>
<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
 
  <rosparam command="load" file="$(find abb_irb2400_support)/config/joint_names_irb2400.yaml"/>
 
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip and controller(fs100|dx100) arguments is required -->
  <arg name="sim_robot" default="true" />
  <arg name="robot_ip" unless="$(arg sim_robot)" />
	<arg name="rviz" default="true"/>
  
  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find godel_irb2400_moveit_config)/launch/irb2400_calib_planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>
  
  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim_robot)">
    <remap from="joint_states" to="abb/joint_states"/>
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch"/>
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group unless="$(arg sim_robot)">
    <remap from="joint_states" to="abb/joint_states"/>
    <include file="$(find abb_irb2400_support)/launch/robot_interface_download_irb2400.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>
  </group>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find godel_irb2400_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include if="$(arg rviz)" file="$(find godel_irb2400_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>
  
    <!-- joint state publisher which combines the mutable and the real joint states for the scene -->
  <node name="combined_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
    <rosparam param="source_list">[abb/joint_states, mutable_joint_states]</rosparam>
    <param name="publish_default_velocities" value="true" />
    <param name="publish_default_efforts" value="true" />
    <param name="publish_default_positions" value="true" />
  </node>

    <!-- publish the joint states associated with transforms that might be calibrated-->
  <node name="mutable_joint_state_publisher" pkg="industrial_extrinsic_cal" type="mutable_joint_state_publisher" output="screen">
    <param name="mutable_joint_state_yaml_file" value="$(find godel_irb2400_support)/yaml/godel_mutable_joint_states.yaml" />
    <remap from="joint_states" to="/mutable_joint_states"/>
  </node>

  <include file="$(find godel_robot_resources)/launch/blending_calibration.launch">
    <arg name="package_path" value="$(find godel_irb2400_support)/yaml/"/>
  </include>

</launch>

